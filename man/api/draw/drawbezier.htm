<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>drawbezier</title>
    <link rel="stylesheet" type="text/css" href="../../css/index-table.css"/>
</head>
<body>

<pre><font size="4"><a href="../../index.htm">主页</a> / <a href="../index.htm">库函数目录</a> / <a href="index.htm">图形绘制</a> / drawbezier</font>
<font size="4">
<font size="4" color="#0000FF"><strong>功能：</strong></font>

绘制 bezier 曲线，线条颜色由 setcolor() 函数指定。

<font size="4" color="#0000FF"><strong>声明：</strong></font>
<pre><font color=#0000FF>void </font><font color=#008080>drawbezier</font>(
    <font color=#0000FF>int </font>numpoints,
    <font color=#0000FF>const int </font>*polypoints,
    <font color=#800080>PIMAGE</font> pimg = <font color=#800080>NULL
</font>);
</pre>
<font size="4" color="#0000FF"><strong>参数：</strong></font>

numpoints
多边形点的个数，数值需要是 3n+1 ，如果不是，则忽略最后面若干个点。

polypoints
每个点的坐标（每连续两个值依次为点的 x 坐标和 y 坐标），数组元素个数为 numpoints * 2。
每一条 bezier 曲线由两个端点和两个控制点组成，相邻两条则共用端点。

pimg
绘制的目标图像，默认为 NULL（即绘制到窗口）。

<font size="4" color="#0000FF"><strong>返回值：</strong></font>

（无）

<font size="4" color="#0000FF"><strong>示例：</strong></font>

（无）

</font>
</pre>

</body>

